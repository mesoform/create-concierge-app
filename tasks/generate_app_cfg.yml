---
- block:
  - name: create app config directory
    file:
      state: directory
      path: "{{ docker_src }}/{{ app_config_dir | default(default_app_config_dir) }}"

  - name: generating application config files
    template:
      src: "{{ item }}"
      dest: "{{ docker_src }}/{{ app_config_dir | default(default_app_config_dir) }}/{{ item | basename | regex_replace('\\.j2','') }}"
    with_fileglob:
        - "{{ playbook_dir }}/templates/app/*.j2"

  - name: generating default containerpilot.json
    template:
      src: "{{ item }}"
      dest: "{{ docker_src }}/etc/{{ item | basename | regex_replace('\\.j2','') }}"
    with_fileglob:
        - "{{ playbook_dir }}/create-concierge-app/templates/orchestration/containerpilot.json5.j2"

  - name: generate default docker-compose.yml
    template:
      src: "{{ item }}"
      dest: "{{ playbook_dir }}/{{ item | basename | regex_replace('\\.j2','') }}"
    with_fileglob:
        - "{{ playbook_dir }}/create-concierge-app/templates/orchestration/docker-compose.yml.j2"

  - name: generating custom app containerpilot.json5 file
    template:
      src: "{{ item }}"
      dest: "{{ custom_orchestration_dir | default(default_custom_orchestration_dir) }}/{{ item | basename | regex_replace('\\.j2','') }}"
    with_fileglob:
        - "{{ playbook_dir }}/templates/orchestration/containerpilot.json5.j2"

  - name: generating custom app Docker Compose override files
    template:
      src: "{{ item }}"
      dest: "{{ playbook_dir }}/{{ item | basename | regex_replace('\\.j2','') }}"
    with_fileglob:
        - "{{ playbook_dir }}/templates/orchestration/docker-compose*-override.yml.j2"

  tags:
    - configure


- name: search for user-defined template directories
  find:
    paths: templates/
    file_type: directory
    recurse: yes
    use_regex: yes
    patterns: '(?=.*)((?!(app|orchestration|scripts)))'
  register: additional_template_dirs
  tags:
    - configure


- block:
  - name: create corresponding config directories to add to container
    file:
      state: directory
      path: "{{ item.path | regex_replace('templates/','files/') }}"
    with_items: "{{ additional_template_dirs.files }}"

  - name: generate list of user-defined template search paths
    set_fact:
      user_template_search_paths: "\
        {{ user_template_search_paths | default([]) }} + \
        [ '{{ item.path }}/*.j2' ]"
    with_items: "{{ additional_template_dirs.files }}"

  - name: processing user supplied templates
    template:
      src: "{{ item }}"
      dest: "{{ item | regex_replace('templates/','files/') | regex_replace('\\.j2','') }}"
    with_fileglob: "{{ user_template_search_paths }}"

  when: additional_template_dirs.matched > 0
  tags:
    - configure